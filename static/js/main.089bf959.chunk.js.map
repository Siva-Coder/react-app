{"version":3,"sources":["Components/appBar.js","Components/houses.js","Components/bottomBar.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","ButtonAppBar","classes","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","Button","maxWidth","marginBottom","media","height","location","display","alignContent","typo","lineHeight","flex","sqft","bedrooms","marginLeft","MediaCard","props","Card","CardActionArea","CardMedia","image","imageUrl","CardContent","gutterBottom","component","CardActions","style","float","size","borderRadius","width","bottom","SimpleBottomNavigation","React","useState","value","setValue","BottomNavigation","onChange","event","newValue","showLabels","BottomNavigationAction","label","icon","Houses","margin","overflowY","app__container","background","overflow","App","posts","map","post","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.089bf959.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nfunction ButtonAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            News\r\n          </Typography>\r\n          <Button color=\"inherit\">Login</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ButtonAppBar;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport SquareFootIcon from '@material-ui/icons/SquareFoot';\r\nimport SingleBedIcon from '@material-ui/icons/SingleBed';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: '100%',\r\n    marginBottom: 20\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n  location: {\r\n      display:'flex',\r\n      alignContent:'center',\r\n      marginBottom: '10px'\r\n  },\r\n  typo:{\r\n      lineHeight:1.7\r\n  },\r\n  flex:{\r\n      display:'flex',\r\n  },\r\n  sqft:{\r\n      display:'flex',\r\n  },\r\n  bedrooms:{\r\n      display:'flex',\r\n      marginLeft: '20px'\r\n  }\r\n});\r\n\r\nexport default function MediaCard(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={props.imageUrl}\r\n          title=\"Contemplative Reptile\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                {props.title}\r\n          </Typography>\r\n          <div className={classes.location}>\r\n          <LocationOnIcon /> \r\n          <Typography variant=\"body2\" className={classes.typo} color=\"textSecondary\" component=\"p\">\r\n                {props.location}\r\n          </Typography>\r\n          </div>\r\n\r\n          <div className={classes.flex}>\r\n            <div className={classes.sqft}>\r\n            <SquareFootIcon /> \r\n            <Typography variant=\"body2\" className={classes.typo} color=\"textSecondary\" component=\"p\">\r\n                {props.sqft} sqft\r\n            </Typography>\r\n            </div>\r\n            <div className={classes.bedrooms}>\r\n                <SingleBedIcon />\r\n                <Typography variant=\"body2\" className={classes.typo} color=\"textSecondary\" component=\"p\">\r\n                {props.bedrooms} bedrooms\r\n                </Typography>\r\n            </div>\r\n          </div>\r\n\r\n         \r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions style={{float:'right'}}>\r\n        <Button variant=\"contained\" size=\"small\" style={{borderRadius:50,float:'right',marginBottom:5}} color=\"primary\" >\r\n          Book Rent\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport AdjustIcon from '@material-ui/icons/Adjust'\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n    position: 'absolute',\r\n    bottom:0\r\n  },\r\n});\r\n\r\nfunction SimpleBottomNavigation() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  return (\r\n    <BottomNavigation\r\n      value={value}\r\n      onChange={(event, newValue) => {\r\n        setValue(newValue);\r\n      }}\r\n      showLabels\r\n      className={classes.root}\r\n    >\r\n      <BottomNavigationAction label=\"For you\" icon={<AdjustIcon />} />\r\n      <BottomNavigationAction label=\"Nearby\" icon={<LocationOnIcon />} />\r\n      <BottomNavigationAction label=\"Favorites\" icon={<FavoriteIcon />} />\r\n      <BottomNavigationAction label=\"More\" icon={<MoreHorizIcon />} />\r\n    </BottomNavigation>\r\n  );\r\n}\r\n\r\nexport default SimpleBottomNavigation;\r\n","import React, { Component, useState } from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport Button from '@material-ui/core/Button';\nimport ButtonAppBar from \"./Components/appBar\";\nimport MediaCard from \"./Components/houses\";\nimport SimpleBottomNavigation from \"./Components/bottomBar\";\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//      <input type=\"text\"></input>\n//     </div>\n//   );\n// }\nconst Houses = {\n  height:'80%',\n  margin: '10px',\n  overflowY:'scroll'\n};\n\nconst app__container = {\n  background:'#f4f4f4',\n  position:\"absolute\",\n  height:'100%',\n  width:'100%',\n  overflow:'hidden'\n}\n\n\n\nfunction App(){\n  // constructor(props){\n  //   super(props);\n\n  //   this.state = {\n  //     username:'',\n  //     password:'',\n  //     requirements: [\n  //       {\n  //         title:'FIrst House',\n  //         location:'Aurandalpet, Guntur',\n  //         sqft:3200,\n  //         bedrooms:2\n  //         },\n  //         {\n  //           title:'Second House',\n  //           location:'Nallacheruvu, Guntur',\n  //           sqft:5000,\n  //           bedrooms:4\n  //           }\n  //     ]\n  //   }\n\n\n  //   this.changeState = this.changeState.bind(this);\n  // }\n  \n\n    // changeState(e){\n    //   // e.preveDefault();\n    //   this.setState({\n    //     [e.target.name]: e.target.value,\n    //     [e.target.name]: e.target.value\n    //   })\n    //   console.log(this.state);\n    // }\n\n    // handleChange = (event) => {\n    //   this.setState({\n    //     [event.target.name]:event.target.value\n    //   })\n\n    //   console.log(this.state);\n    // }\n\n    // handleSubmit = (event) => {\n    //   event.preventDefault();\n    //   const {username, password} = this.state;\n    //   console.log(`Username: ${username}  Password: ${password}`); \n    // }\n  const [posts, setPosts] = useState([\n        {\n        title:'FIrst House',\n        location:'Aurandalpet, Guntur',\n        sqft:3200,\n        bedrooms:2,\n        imageUrl:\"https://media.istockphoto.com/photos/empty-white-new-construction-cottage-house-just-completed-picture-id1128971667?k=6&m=1128971667&s=612x612&w=0&h=-1j8bOD-2JuMdgTg07D-YjhKQP7sB9S1B-4F1MdeNWA=\"\n        },\n        {\n          title:'Second House',\n          location:'Nallacheruvu, Guntur',\n          sqft:5000,\n          bedrooms:4,\n          imageUrl:\"https://images.unsplash.com/photo-1576941089067-2de3c901e126?ixlib=rb-1.2.1&w=1000&q=80\"\n        },\n        {\n          title:'Third House',\n          location:'Amaravathi road, Guntur',\n          sqft:2500,\n          bedrooms:3,\n          imageUrl:\"https://cdn.pixabay.com/photo/2016/11/18/17/46/architecture-1836070__340.jpg\"\n        }\n  ])\n\n  return(\n    <div style={app__container}>\n\n      <ButtonAppBar></ButtonAppBar>\n      <div style={Houses} className=\"houses\">\n        {\n        posts.map(post => {\n           return <MediaCard title={post.title} location={post.location} sqft={post.sqft} bedrooms={post.bedrooms} imageUrl={post.imageUrl}></MediaCard>\n        })\n        }\n      \n      </div>\n\n      <div>\n      <SimpleBottomNavigation></SimpleBottomNavigation>\n      </div>\n    {/* <div className=\"Container\">\n      <form onSubmit={this.handleSubmit}>\n    <input type=\"text\" onChange={this.handleChange} name=\"username\" placeholder={this.state.username} value={this.state.username} />\n    <br />\n    <input type=\"text\" onChange={this.handleChange} name=\"password\" placeholder={this.state.password} value={this.state.password} />\n    <br />\n    <Button variant=\"contained\" color=\"primary\" style={{borderRadius:50}} onClick={this.handleSubmit}>Save</Button>\n    </form>\n\n  <h3>{this.state.username}</h3>\n    </div> */}\n\n\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}